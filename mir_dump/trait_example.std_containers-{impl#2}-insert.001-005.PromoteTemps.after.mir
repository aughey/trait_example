// MIR for `std_containers::<impl at src/std_containers.rs:24:1: 25:30>::insert` after PromoteTemps

| User Type Annotations
| 0: user_ty: Canonical { value: TypeOf(DefId(1:1461 ~ std[e172]::collections::hash::set::{impl#2}::insert), UserArgs { args: [^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(1:1430 ~ std[e172]::collections::hash::set::{impl#2}), self_ty: std::collections::HashSet<^2, ^3> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }] }, span: src/std_containers.rs:28:9: 28:24, inferred_ty: for<'a> fn(&'a mut std::collections::HashSet<T>, T) -> bool {std::collections::HashSet::<T>::insert}
|
fn std_containers::<impl at src/std_containers.rs:24:1: 25:30>::insert(_1: &mut HashSet<T>, _2: T) -> () {
    debug self => _1;
    debug item => _2;
    let mut _0: ();
    let _3: bool;
    let mut _4: &mut std::collections::HashSet<T>;
    let mut _5: T;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &mut (*_1);
        StorageLive(_5);
        _5 = move _2;
        _3 = HashSet::<T>::insert(move _4, move _5) -> [return: bb1, unwind: bb3];
    }

    bb1: {
        StorageDead(_5);
        StorageDead(_4);
        StorageDead(_3);
        _0 = const ();
        drop(_2) -> [return: bb2, unwind: bb5];
    }

    bb2: {
        return;
    }

    bb3 (cleanup): {
        drop(_5) -> [return: bb4, unwind terminate(cleanup)];
    }

    bb4 (cleanup): {
        drop(_2) -> [return: bb5, unwind terminate(cleanup)];
    }

    bb5 (cleanup): {
        resume;
    }
}
