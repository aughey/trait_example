// MIR for `std_containers::<impl at src/std_containers.rs:32:1: 33:38>::len` before SimplifyCfg-initial

| User Type Annotations
| 0: user_ty: Canonical { value: TypeOf(DefId(1:1419 ~ std[e172]::collections::hash::set::{impl#1}::len), UserArgs { args: [^0, ^1], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(1:1414 ~ std[e172]::collections::hash::set::{impl#1}), self_ty: std::collections::HashSet<^2, ^3> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }] }, span: src/std_containers.rs:45:9: 45:21, inferred_ty: for<'a> fn(&'a std::collections::HashSet<T>) -> usize {std::collections::HashSet::<T>::len}
|
fn std_containers::<impl at src/std_containers.rs:32:1: 33:38>::len(_1: &HashSet<T>) -> usize {
    debug self => _1;
    let mut _0: usize;
    let mut _2: &std::collections::HashSet<T>;

    bb0: {
        StorageLive(_2);
        _2 = &(*_1);
        _0 = HashSet::<T>::len(move _2) -> [return: bb1, unwind: bb2];
    }

    bb1: {
        StorageDead(_2);
        return;
    }

    bb2 (cleanup): {
        resume;
    }
}
