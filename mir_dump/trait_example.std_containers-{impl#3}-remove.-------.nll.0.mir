// MIR for `std_containers::<impl at src/std_containers.rs:32:1: 33:38>::remove` 0 nll

| Free Region Mapping
| '?0 | Global | ['?0, '?2, '?1]
| '?1 | Local | ['?2, '?1]
| '?2 | Local | ['?2]
|
| Inferred Region Values
| '?0 | U0 | {bb0[0..=6], bb1[0..=2], bb2[0..=1], bb3[0..=6], bb4[0], bb5[0..=7], bb6[0..=5], bb7[0..=1], bb8[0..=2], bb9[0..=1], bb10[0], bb11[0], '?0, '?1, '?2}
| '?1 | U0 | {bb0[0..=6], bb1[0..=2], bb2[0..=1], bb3[0..=6], bb4[0], bb5[0..=7], bb6[0..=5], bb7[0..=1], bb8[0..=2], bb9[0..=1], bb10[0], bb11[0], '?1}
| '?2 | U0 | {bb0[0..=6], bb1[0..=2], bb2[0..=1], bb3[0..=6], bb4[0], bb5[0..=7], bb6[0..=5], bb7[0..=1], bb8[0..=2], bb9[0..=1], bb10[0], bb11[0], '?2}
| '?3 | U0 | {bb0[5..=6], bb1[0..=2], bb2[0..=1]}
| '?4 | U0 | {bb1[0..=2]}
| '?5 | U0 | {bb1[0..=2], bb2[0..=1]}
| '?6 | U0 | {bb2[1]}
| '?7 | U0 | {bb5[1..=7]}
| '?8 | U0 | {bb5[4..=7]}
| '?9 | U0 | {bb5[6..=7]}
| '?10 | U0 | {bb0[0..=6], bb1[0..=2], bb2[0..=1], bb3[0..=6], bb4[0], bb5[0..=7], bb6[0..=5], bb7[0..=1], bb8[0..=2], bb9[0..=1], bb10[0], bb11[0], '?1}
| '?11 | U0 | {bb2[0..=1]}
| '?12 | U0 | {bb1[1..=2]}
| '?13 | U0 | {bb1[0..=2], bb2[0..=1]}
| '?14 | U0 | {bb1[0..=2], bb2[0..=1]}
| '?15 | U0 | {bb0[6], bb1[0..=2], bb2[0..=1]}
| '?16 | U0 | {bb5[2..=7]}
| '?17 | U0 | {bb5[5..=7]}
| '?18 | U0 | {bb5[7]}
| '?19 | U0 | {bb0[6], bb1[0..=2], bb2[0..=1]}
| '?20 | U0 | {bb1[2]}
| '?21 | U0 | {bb5[7]}
| '?22 | U0 | {bb5[7]}
|
| Inference Constraints
| '?0 live at {bb0[0..=6], bb1[0..=2], bb2[0..=1], bb3[0..=6], bb4[0], bb5[0..=7], bb6[0..=5], bb7[0..=1], bb8[0..=2], bb9[0..=1], bb10[0], bb11[0]}
| '?1 live at {bb0[0..=6], bb1[0..=2], bb2[0..=1], bb3[0..=6], bb4[0], bb5[0..=7], bb6[0..=5], bb7[0..=1], bb8[0..=2], bb9[0..=1], bb10[0], bb11[0]}
| '?2 live at {bb0[0..=6], bb1[0..=2], bb2[0..=1], bb3[0..=6], bb4[0], bb5[0..=7], bb6[0..=5], bb7[0..=1], bb8[0..=2], bb9[0..=1], bb10[0], bb11[0]}
| '?3 live at {bb0[5]}
| '?4 live at {bb1[0]}
| '?5 live at {bb1[2]}
| '?6 live at {bb2[1]}
| '?7 live at {bb5[1]}
| '?8 live at {bb5[4]}
| '?9 live at {bb5[6]}
| '?11 live at {bb2[0..=1]}
| '?12 live at {bb1[1..=2]}
| '?13 live at {bb1[1..=2]}
| '?14 live at {bb1[0]}
| '?15 live at {bb0[6]}
| '?16 live at {bb5[2..=6]}
| '?17 live at {bb5[5..=7]}
| '?18 live at {bb5[7]}
| '?19 live at {bb0[6]}
| '?20 live at {bb1[2]}
| '?21 live at {bb5[7]}
| '?22 live at {bb5[7]}
| '?1: '?10 due to BoringNoLocation at All(src/std_containers.rs:36:15: 36:24) (src/std_containers.rs:36:15: 36:24 (#0)
| '?3: '?15 due to Boring at Single(bb0[5]) (src/std_containers.rs:37:20: 37:24 (#0)
| '?4: '?12 due to Boring at Single(bb1[0]) (src/std_containers.rs:37:20: 37:31 (#0)
| '?5: '?11 due to Boring at Single(bb1[2]) (src/std_containers.rs:37:20: 37:38 (#0)
| '?5: '?13 due to CallArgument(Some(FnDef(DefId(2:7938 ~ core[e323]::iter::traits::iterator::Iterator::next), [std::collections::hash_set::Iter<ReErased, T/#0>]))) at Single(bb1[2]) (src/std_containers.rs:37:20: 37:38 (#0)
| '?5: '?20 due to BoringNoLocation at Single(bb1[2]) (src/std_containers.rs:37:20: 37:38 (#0)
| '?7: '?16 due to Assignment at Single(bb5[1]) (src/std_containers.rs:38:21: 38:29 (#0)
| '?8: '?17 due to Boring at Single(bb5[4]) (src/std_containers.rs:39:29: 39:33 (#0)
| '?9: '?18 due to Boring at Single(bb5[6]) (src/std_containers.rs:39:35: 39:39 (#0)
| '?10: '?1 due to BoringNoLocation at All(src/std_containers.rs:36:15: 36:24) (src/std_containers.rs:36:15: 36:24 (#0)
| '?10: '?3 due to Boring at Single(bb0[5]) (src/std_containers.rs:37:20: 37:24 (#0)
| '?10: '?8 due to Boring at Single(bb5[4]) (src/std_containers.rs:39:29: 39:33 (#0)
| '?11: '?6 due to CallArgument(Some(FnDef(DefId(2:8723 ~ core[e323]::option::{impl#2}::cloned), [ReErased, T/#0]))) at Single(bb2[1]) (src/std_containers.rs:37:20: 37:47 (#0)
| '?12: '?20 due to CallArgument(Some(FnDef(DefId(2:7938 ~ core[e323]::iter::traits::iterator::Iterator::next), [std::collections::hash_set::Iter<ReErased, T/#0>]))) at Single(bb1[2]) (src/std_containers.rs:37:20: 37:38 (#0)
| '?13: '?5 due to CallArgument(Some(FnDef(DefId(2:7938 ~ core[e323]::iter::traits::iterator::Iterator::next), [std::collections::hash_set::Iter<ReErased, T/#0>]))) at Single(bb1[2]) (src/std_containers.rs:37:20: 37:38 (#0)
| '?13: '?14 due to Boring at Single(bb1[0]) (src/std_containers.rs:37:20: 37:31 (#0)
| '?14: '?13 due to Boring at Single(bb1[0]) (src/std_containers.rs:37:20: 37:31 (#0)
| '?15: '?19 due to CallArgument(Some(FnDef(DefId(1:1418 ~ std[e172]::collections::hash::set::{impl#1}::iter), [T/#0, std::hash::RandomState]))) at Single(bb0[6]) (src/std_containers.rs:37:20: 37:31 (#0)
| '?16: '?9 due to Boring at Single(bb5[6]) (src/std_containers.rs:39:35: 39:39 (#0)
| '?17: '?21 due to CallArgument(Some(FnDef(DefId(1:1463 ~ std[e172]::collections::hash::set::{impl#2}::remove), [T/#0, std::hash::RandomState, T/#0]))) at Single(bb5[7]) (src/std_containers.rs:39:13: 39:40 (#0)
| '?18: '?22 due to CallArgument(Some(FnDef(DefId(1:1463 ~ std[e172]::collections::hash::set::{impl#2}::remove), [T/#0, std::hash::RandomState, T/#0]))) at Single(bb5[7]) (src/std_containers.rs:39:13: 39:40 (#0)
| '?19: '?14 due to Boring at Single(bb0[6]) (src/std_containers.rs:37:20: 37:31 (#0)
|
| User Type Annotations
| 0: user_ty: Canonical { value: TypeOf(DefId(1:1463 ~ std[e172]::collections::hash::set::{impl#2}::remove), UserArgs { args: [^0, ^1, ^2], user_self_ty: Some(UserSelfTy { impl_def_id: DefId(1:1430 ~ std[e172]::collections::hash::set::{impl#2}), self_ty: std::collections::HashSet<^3, ^4> }) }), max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }, CanonicalVarInfo { kind: Ty(General(U0)) }] }, span: src/std_containers.rs:39:13: 39:28, inferred_ty: for<'a, 'b> fn(&'a mut std::collections::HashSet<T>, &'b T) -> bool {std::collections::HashSet::<T>::remove::<T>}
|
fn std_containers::<impl at src/std_containers.rs:32:1: 33:38>::remove(_1: &mut HashSet<T>) -> Option<T> {
    debug self => _1;
    let mut _0: std::option::Option<T>;
    let _2: std::option::Option<T>;
    let mut _3: std::option::Option<&T>;
    let mut _4: &mut std::collections::hash_set::Iter<'_, T>;
    let mut _5: std::collections::hash_set::Iter<'_, T>;
    let mut _6: &std::collections::HashSet<T>;
    let _7: ();
    let mut _8: isize;
    let _10: bool;
    let mut _11: &mut std::collections::HashSet<T>;
    let mut _12: &T;
    scope 1 {
        debug item => _2;
        scope 2 {
            debug item => _9;
            let _9: &T;
        }
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &(*_1);
        _5 = HashSet::<T>::iter(move _6) -> [return: bb1, unwind: bb11];
    }

    bb1: {
        _4 = &mut _5;
        StorageDead(_6);
        _3 = <std::collections::hash_set::Iter<'_, T> as Iterator>::next(move _4) -> [return: bb2, unwind: bb11];
    }

    bb2: {
        StorageDead(_4);
        _2 = Option::<&T>::cloned(move _3) -> [return: bb3, unwind: bb11];
    }

    bb3: {
        StorageDead(_3);
        FakeRead(ForLet(None), _2);
        StorageDead(_5);
        StorageLive(_7);
        PlaceMention(_2);
        _8 = discriminant(_2);
        switchInt(move _8) -> [1: bb4, otherwise: bb7];
    }

    bb4: {
        falseEdge -> [real: bb5, imaginary: bb7];
    }

    bb5: {
        StorageLive(_9);
        _9 = &((_2 as Some).0: T);
        StorageLive(_10);
        StorageLive(_11);
        _11 = &mut (*_1);
        StorageLive(_12);
        _12 = &(*_9);
        _10 = HashSet::<T>::remove::<T>(move _11, move _12) -> [return: bb6, unwind: bb10];
    }

    bb6: {
        StorageDead(_12);
        StorageDead(_11);
        StorageDead(_10);
        _7 = const ();
        StorageDead(_9);
        goto -> bb8;
    }

    bb7: {
        _7 = const ();
        goto -> bb8;
    }

    bb8: {
        StorageDead(_7);
        _0 = move _2;
        drop(_2) -> [return: bb9, unwind: bb11];
    }

    bb9: {
        StorageDead(_2);
        return;
    }

    bb10 (cleanup): {
        drop(_2) -> [return: bb11, unwind terminate(cleanup)];
    }

    bb11 (cleanup): {
        resume;
    }
}
