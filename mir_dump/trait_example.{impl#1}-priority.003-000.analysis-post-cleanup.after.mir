// MIR for `<impl at src/lib.rs:61:1: 61:30>::priority` after analysis-post-cleanup

fn <impl at src/lib.rs:61:1: 61:30>::priority(_1: &ComplexData) -> u32 {
    debug self => _1;
    let mut _0: u32;
    let mut _2: i32;
    let mut _3: i32;
    let mut _4: i32;
    let mut _5: i32;
    let mut _6: (i32, bool);

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        StorageLive(_4);
        _4 = ((*_1).0: i32);
        StorageLive(_5);
        _5 = ((*_1).1: i32);
        _6 = CheckedAdd(_4, _5);
        assert(!move (_6.1: bool), "attempt to compute `{} + {}`, which would overflow", move _4, move _5) -> [success: bb1, unwind continue];
    }

    bb1: {
        _3 = move (_6.0: i32);
        StorageDead(_5);
        StorageDead(_4);
        _2 = <i32 as Ord>::clamp(move _3, const 0_i32, const 100_i32) -> [return: bb2, unwind continue];
    }

    bb2: {
        StorageDead(_3);
        _0 = move _2 as u32 (IntToInt);
        StorageDead(_2);
        return;
    }
}
